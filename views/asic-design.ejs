<section class="layout_padding">
  <div class="container">
    <div class="d-flex flex-column align-items-end">
      <div class="custom_heading-container">
        <hr />
        <h2>ASIC Design</h2>
      </div>
    </div>
    <div class="layout_padding-top layout_padding2-bottom">
      <div class="row">
        <div class="col-md-7">
          Application-Specific Integrated Circuit (ASIC) design has become an
          increasingly important aspect of the technology industry as companies
          and design teams strive to create specialized solutions for a variety
          of applications. In this comprehensive guide, we will explore ASIC
          design, providing an in-depth look at the entire process from concept
          to production. This article is intended for readers who are interested
          in learning about ASIC design flow, whether they are industry
          professionals, students, or simply curious about the technology.
        </div>
        <div class="col-md-5">
          <img src="images/blog1.png" width="400px" alt="" />
        </div>
      </div>
    </div>
    <div class="d-flex flex-column align-items-end">
      <div class="custom_heading-container">
        <hr />
        <h2>RTL Design</h2>
      </div>
    </div>
    <div class="layout_padding-top layout_padding2-bottom">
      <div class="row">
        <div class="col-md-7">
          Register transfer level (RTL) is an abstraction for defining the
          digital portions of a design. It is the principle abstraction used for
          defining electronic systems today and often serves as the golden model
          in the design and verification flow. The RTL design is usually
          captured using a hardware description language (HDL) such as Verilog
          or VHDL. While these languages are capable of defining systems at
          other levels of abstraction, it is generally the RTL semantics of
          these languages, and indeed a subset of these languages defined as the
          synthesizable subset. This means the language constructs that can be
          reliably fed into a logic synthesis tool that in turn creates the
          gate-level abstraction of the design that is used for all downstream
          implementation operations.
        </div>
        <div class="col-md-5">
          <img
            src="https://mirafra.com/wp-content/uploads/2021/04/rdvgls-21.png"
            width="300px"
            alt=""
          />
        </div>
      </div>
    </div>
    <div class="d-flex flex-column align-items-end">
      <div class="custom_heading-container">
        <hr />
        <h2>VERIFICATION</h2>
      </div>
    </div>
    <div class="layout_padding-top layout_padding2-bottom">
      <div class="row">
        <div class="col-md-7">
          RTL Design is a functional prototype of a chip. It must go through
          rigorous testing before moving to the next phase. Most of the bugs in
          a chip are either logical or functional. Verifying for corner cases
          will bring bugs to the surface. These are difficult to find with basic
          checks alone.
          <br /><br />
          RTL Verification involves review of design specifications, Planning
          the verification items / scenarios and building a test bench.
          <br />
          <br />
          <ul>
            <li>
              RTL Design complexity has increased significantly over the time.
            </li>
            <li>
              Verification of the design early in the flow is highly desirable.
            </li>
          </ul>
        </div>
        <div class="col-md-5">
          <img
            src="https://mirafra.com/wp-content/uploads/2021/04/dia02.jpg"
            width="350px"
            alt=""
          />
        </div>
      </div>
    </div>
    <div class="d-flex flex-column align-items-end">
      <div class="custom_heading-container">
        <hr />
        <h2>SYSTEMC VERIFICATION</h2>
      </div>
    </div>
    <div class="layout_padding-top layout_padding2-bottom">
      <div class="row">
        <div class="col-md-8">
          Daivic has a small but capable team with hands-on expertise in various
          aspects of the chip design flow where SystemC plays a critical role.
          They are represented in the chart below.
        </div>
        <div class="row">
          <div class="col-md-4">
            <img
              src="https://mirafra.com/wp-content/uploads/2021/04/rtl-design2.jpg"
              alt=""
            />
          </div>
          <div class="col-md-4">
            <img
              src="https://mirafra.com/wp-content/uploads/2021/04/rtl_0002.png"
              alt=""
            />
          </div>
          <div class="col-md-4">
            <img
              src="https://mirafra.com/wp-content/uploads/2021/04/rtl_002.png"
              alt=""
            />
          </div>
        </div>
      </div>
    </div>
    <div class="d-flex flex-column align-items-end">
      <div class="custom_heading-container">
        <hr />
        <h2>ANALOG & MIXED SIGNAL VERIFICATION</h2>
      </div>
    </div>
    <div class="layout_padding-top layout_padding2-bottom">
      <div class="row">
        <div class="col-md-10">
          The AMS verification team at Mirafra has the skillsets required to
          execute on:
          <br />
          <br />
          <ul>
            <li>Analog/mixed-signal block simulations</li>
            <li>
              Modelling of analog and mixed signal blocks using Verilog-AMS
            </li>
            <li>Creating digital mixed signal test benches</li>
            <li>
              Comprehensive AMS full chip verification of mixed signal ASICs.
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>
